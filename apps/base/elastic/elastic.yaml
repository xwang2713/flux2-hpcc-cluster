apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: elk
spec:
  releaseName: elk
  chart:
    spec:
      chart: elastic4hpcclogs
      sourceRef:
        kind: HelmRepository
        name: hpcc-chart-helm
        namespace: flux-system
  interval: 10m0s
  install:
    remediation:
      retries: 3
  values:
    elasticsearch:
      enabled: true
      description: "HPCC Managed Elasticsearch"
      antiAffinity: "soft"
      replicas: 1
      minimumMasterNodes: 1
      labels: {"managedby" : "HPCC"}
      clusterHealthCheckParams: "local=true"
      volumeClaimTemplate:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
    filebeat:
      description: "HPCC Managed filebeat"
      labels: {"managedby" : "HPCC"}
      filebeatConfig:
        filebeat.yml: |
          filebeat.inputs:
          - type: container
            paths:
            - /var/log/containers/esdl-sandbox-*.log
            - /var/log/containers/eclwatch-*.log
            - /var/log/containers/mydali-*.log
            - /var/log/containers/eclqueries-*.log
            - /var/log/containers/sql2ecl-*.log
            - /var/log/containers/eclservices-*.log
            - /var/log/containers/dfuserver-*.log
            - /var/log/containers/eclscheduler-*.log
            - /var/log/containers/hthor-*.log
            - /var/log/containers/myeclccserver-*.log
            - /var/log/containers/roxie-*.log
            - /var/log/containers/sasha-*.log
            - /var/log/containers/thor-*.log
            processors:
            - add_kubernetes_metadata:
                host: ${NODE_NAME}
                matchers:
                - logs_path:
                    logs_path: "/var/log/containers/"
          output.elasticsearch:
            host: '${NODE_NAME}'
            hosts: '${ELASTICSEARCH_HOSTS:elasticsearch-master:9200}'
            pipeline: 'hpccpipeline'
    kibana:
      enabled: true
      description: "HPCC Managed Kibana"
      labels: {"managedby" : "HPCC"}
      service:
        type: "LoadBalancer"
