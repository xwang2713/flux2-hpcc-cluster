apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: elk
spec:
  releaseName: elk
  chart:
    spec:
      chart: elastic4hpcclogs
      sourceRef:
        kind: HelmRepository
        name: hpcc-chart-helm
        namespace: flux-system
  interval: 10m0s
  install:
    remediation:
      retries: 3
  values:
    elasticsearch:
      enabled: true
      description: "HPCC Managed Elasticsearch"
      ##See https://github.com/elastic/helm-charts/blob/master/elasticsearch/values.yaml for all available options
      antiAffinity: "soft"  #default is HARD, for minimal systems soft might be necessary
      replicas: 1           #default is 3, for minimal systems 1 replicas should be adequate
      minimumMasterNodes: 1 #default is 2, for minimal systems 1 master node should be adequate
      labels: {"managedby" : "HPCC"}
      clusterHealthCheckParams: "local=true" #local node health status
      volumeClaimTemplate:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
      #persistence:
        #enabled: true
        #labels:
          # Add default labels for the volumeClaimTemplate fo the StatefulSet
          #enabled: false
        #annotations: {}
    filebeat:     
      description: "HPCC Managed filebeat"
      ##See https://github.com/elastic/helm-charts/blob/master/filebeat/values.yaml for all available options
      labels: {"managedby" : "HPCC"}
      ## Allows you to add any config files in /usr/share/filebeat
      ## such as filebeat.yml
      filebeatConfig:
        filebeat.yml: |
          filebeat.inputs:
          - type: container
            paths:
            - /var/log/containers/esdl-sandbox-*.log
            - /var/log/containers/eclwatch-*.log
            - /var/log/containers/mydali-*.log
            - /var/log/containers/eclqueries-*.log
            - /var/log/containers/sql2ecl-*.log
            - /var/log/containers/eclservices-*.log
            - /var/log/containers/dfuserver-*.log
            - /var/log/containers/eclscheduler-*.log
            - /var/log/containers/hthor-*.log
            - /var/log/containers/myeclccserver-*.log
            - /var/log/containers/roxie-*.log
            - /var/log/containers/sasha-*.log
            - /var/log/containers/thor-*.log
          #exclude_files: ['(myelk-kibana|myelk-filebeat)+(.*).log']
          processors:
          - add_kubernetes_metadata:
              host: ${NODE_NAME}
              matchers:
              - logs_path:
                  logs_path: "/var/log/containers/"
          #Required if targeting non-default index (filebeat-%{[agent.version]}-%{+yyyy.MM.dd}) such as hpccsystems-%{[fields.log_type]}-%{[agent.version]}-%{+yyyy.MM.dd}, etc.
          #setup.ilm.enabled: false
          #setup.template.overwrite: true
        output.elasticsearch:
          host: '${NODE_NAME}'
          hosts: '${ELASTICSEARCH_HOSTS:elasticsearch-master:9200}'
        #NOTE: Pipeline could be used to provide Log structure and therefore enhance search capabilities of HPCC component log entries
        #      Pipeline must be manually inserted either via Elastic Search API, or Kibana Pipeline ingest UI.
        #      See https://github.com/hpcc-systems/HPCC-Platform/blob/master/helm/managed/logging/elastic/README.md
          pipeline: 'hpccpipeline'
        #   index: "hpccsystems-%{[fields.log_type]}-%{[agent.version]}-%{+yyyy.MM.dd}"
        #setup.template.name: hpccsystems
        #setup.template.pattern: hpccsystems-*
        #setup.template.enabled: true
        
 #The kibana component can be customized by modifying helm chart values here.
 #utput.elasticsearch:
 #        host: '${NODE_NAME}'
 #                hosts: '${ELASTICSEARCH_HOSTS:elasticsearch-master:9200}'
    kibana:
      enabled: true
      description: "HPCC Managed Kibana"
      ##See https://github.com/elastic/helm-charts/blob/master/kibana/values.yaml for all available options
      labels: {"managedby" : "HPCC"}
      ## Allows you to add any config files in /usr/share/kibana/config/
      ## such as kibana.yml
      #kibanaConfig: {}
      #   kibana.yml: |
      #     key:
      #       nestedkey: value
      service:
        type: "LoadBalancer"
